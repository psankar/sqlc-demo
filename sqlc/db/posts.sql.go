// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: posts.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createPost = `-- name: CreatePost :one
INSERT INTO posts (author_email, post) VALUES ($1, $2) RETURNING post_id, author_email, post
`

type CreatePostParams struct {
	AuthorEmail string
	Post        pgtype.Text
}

func (q *Queries) CreatePost(ctx context.Context, arg CreatePostParams) (Post, error) {
	row := q.db.QueryRow(ctx, createPost, arg.AuthorEmail, arg.Post)
	var i Post
	err := row.Scan(&i.PostID, &i.AuthorEmail, &i.Post)
	return i, err
}

const getPost = `-- name: GetPost :one
SELECT post_id, author_email, post FROM posts WHERE post_id = $1
`

func (q *Queries) GetPost(ctx context.Context, postID int32) (Post, error) {
	row := q.db.QueryRow(ctx, getPost, postID)
	var i Post
	err := row.Scan(&i.PostID, &i.AuthorEmail, &i.Post)
	return i, err
}
